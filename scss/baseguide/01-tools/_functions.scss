@use 'sass:math';

@function modular-scale($exp, $size: $font-size-base, $type-scale: $type-scale) {
  @return math.pow($type-scale, $exp) * $size;
}

@function strip-unit($number) {
  @return math.div($number, $number * 0 + 1);
}

@function to-rem($value, $base: 16px) {
  @if (unit($value) == 'em') {
    $value: strip-unit($value) * 1rem;
  }

  @if (unit($value) != 'rem') {
    $value: math.div(strip-unit($value), strip-unit($base)) * 1rem;
  }

  @if (strip-unit($value) == 0) {
    $value: 0;
  }

  @return $value;
}

@function ratio-to-percentage($ratio) {
  $width: nth($ratio, 1);
  $height: nth($ratio, 3);

  @return percentage(math.div($height, $width));
}

@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);

  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }

  @return $string;
}

// Usage example:
//
// .icon {
//   background-image: url(get-icon('radio', #fff));
// }
@function get-icon($icon, $color: $icon-color) {
  $color: inspect($color);

  @if (str-index($color, '#') != null) {
    @if map-has-key($icons, $icon) {
      $icon: 'data:image/svg+xml;charset=utf8,' + map-get($icons, $icon);
      $icon: str-replace($icon, inspect($icon-color), $color);

      @each $char, $encoded in ( ('<', '%3C'), ('>', '%3E'), ('#', '%23'), ('"', "'") ) {
        $icon: str-replace($icon, $char, $encoded);
      }
    }
    @else {
      @error "Please make sure '#{$icon}' is defined in the $icons map.";
    }
  }
  @else {
    @error "Please make sure '#{$color}' is a HEX value.";
  }

  @return $icon;
}
