////
/// @group grid
////


@mixin column-base($gutter: $grid-gutter, $size: 100%, $columns: $grid-columns) {
  @include make-gutters($gutter);
  @include column($size, $columns);

  position: relative;
}

@mixin column($size: 'expand', $columns: $grid-columns) {
  @if $size {
    @if (type-of($size) == 'number') {
      @if (unit($size) == '%') {
        width: $size;
      }
      @else {
        @if $size < 1 {
          width: percentage($size);
        }
        @else {
          width: percentage($size / $columns);
        }
      }
    }
    @else {
      width: auto;
      max-width: 100%;

      @if $size == 'shrink' {
        flex: 0 0 auto;
      }

      @if $size == 'expand' {
        flex: 1 1 auto;
      }
    }
  }
}

@mixin column-block($columns: $grid-columns) {
  width: percentage(1 / $columns);

  &:nth-of-type(1n) {
    clear: none;
  }

  &:nth-child(#{$columns}n + 1) {
    clear: both;
  }
}

@mixin column-offset($size, $columns: $grid-columns) {
  @if $size < $columns {
    margin-left: percentage($size / $columns);
  }
}

// Generate columns for a specific breakpoint
@mixin loop-columns($breakpoint, $offset: $grid-offset-classes) {
  @for $i from 0 through $grid-columns {
    @if $i > 0 {
      .#{$meta-prefix-objects}col#{$meta-class-modifier}#{$breakpoint}-#{$i} {
        @include column($i, $grid-columns);
      }
    }

    @if $offset {
      .#{$meta-prefix-objects}col#{$meta-class-modifier}#{$breakpoint}-offset-#{$i} {
        @include column-offset($i, $grid-columns);
      }
    }
  }
}
