////
/// @group global
////


/// Wrapper mixin for fluid-calc that gets spacings from the map `$spacing-variations`
///
/// @param {String} $prop - Any CSS property that supports calc as a value
/// @param {Map|Number|List|String} $sizes ['default'] - Map key of `$spacing-variations`, map of two sizes formatted as (min: x, max y), list of two sizes formatted as (x, y) or just a number (min size)
/// @param {Map} $breakpoints - Map of two named breakpoints from `$mq-breakpoints` formatted as (md, lg) or custom px values formatted as (min: 600px, max: 900px)
/// @param {Bool} $negative [false] - Negates the values if true
/// @param {Bool} $important [false] - Adds important flag if true
@mixin spacing($prop, $sizes: 'default', $negative: false, $important: false) {
  @if (type-of($sizes) == 'string') {
    $spacing-sizes: map-get($spacing-variations, $sizes);

    @if $spacing-sizes {
      $sizes: $spacing-sizes;
    }
    @else {
      @error "The spacing `#{$sizes}` wasn't found in map $spacing-variations.";
    }
  }

  // If we have a map of named breakpoints
  @if (
    type-of($sizes) == 'map'
    and map-has-key($mq-breakpoints, nth(map-keys($sizes), 1))
  ) {
    @include loop-variation($sizes, $prop, $negative: $negative, $important: $important);
  }
  @else {
    @include fluid-calc($prop, $sizes, $negative: $negative, $important: $important);
  }
}
