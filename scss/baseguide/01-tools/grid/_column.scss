@mixin column-base($gutter: $grid-gutter, $size: 100%, $columns: $grid-columns) {
  @include make-gutters($gutter);
  @include column($size, $columns);

  position: relative;
  min-height: 1px;

  @if $grid-fallback {
    float: left;
  }
}

@mixin column($size: 'expand', $columns: $grid-columns) {
  @if $size {
    @if (type-of($size) == 'number') {
      @if (unit($size) == '%') {
        width: $size;
      }
      @else {
        @if $size < 1 {
          width: percentage($size);
        }
        @else {
          width: percentage($size / $columns);
        }
      }
    }
    @else {
      width: auto;
      max-width: 100%;

      @if $size == 'shrink' {
        flex: 0 0 auto;
      }

      @if $size == 'expand' {
        flex: 1 1 auto;
      }
    }
  }
}

@mixin column-block($columns: $grid-columns) {
  width: percentage(1 / $columns);

  &:nth-of-type(1n) {
    clear: none;
  }

  &:nth-child(#{$columns}n+1) {
    clear: both;
  }
}

@mixin column-push($size, $columns: $grid-columns) {
  @if $size > 0 {
    left: percentage($size / $columns);
  }
  @else {
    left: auto;
  }
}

@mixin column-pull($size, $columns: $grid-columns) {
  @if $size > 0 {
    right: percentage($size / $columns);
  }
  @else {
    right: auto;
  }
}

@mixin column-offset($size, $columns: $grid-columns) {
  @if $size < $columns {
    margin-left: percentage($size / $columns);
  }
}

// Generate columns for a specific breakpoint
@mixin loop-columns($breakpoint, $pull: $grid-pull-classes, $push: $grid-push-classes, $offset: $grid-offset-classes) {
  @for $i from 0 through $grid-columns {
    @if $i > 0 {
      .col-#{$breakpoint}-#{$i} {
        @include column($i, $grid-columns);
      }
    }

    @if $pull {
      .col-#{$breakpoint}-pull-#{$i} {
        @include column-pull($i, $grid-columns);
      }
    }

    @if $push {
      .col-#{$breakpoint}-push-#{$i} {
        @include column-push($i, $grid-columns);
      }
    }

    @if $offset {
      .col-#{$breakpoint}-offset-#{$i} {
        @include column-offset($i, $grid-columns);
      }
    }
  }
}
